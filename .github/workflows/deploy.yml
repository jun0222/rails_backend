name: Deploy to Render
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          curl -X POST \
          -H "Accept: application/json" \
          -H "Authorization: Bearer $RENDER_API_KEY" \
          -H "Content-Type: application/json" \
          -d '{"serviceId": "'$RENDER_SERVICE_ID'"}' \
          https://api.render.com/v1/deploys

      - name: Check deployment status
        id: check_deployment
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          curl -X GET \
          -H "Accept: application/json" \
          -H "Authorization: Bearer $RENDER_API_KEY" \
          https://api.render.com/v1/services/$RENDER_SERVICE_ID > deployment_status.json

      - name: Print deployment status
        run: |
          cat deployment_status.json
          DEPLOY_STATUS=$(jq -r '.service.status' deployment_status.json)
          echo "Deployment status: $DEPLOY_STATUS"

      - name: Fail if deployment is not successful
        run: |
          DEPLOY_STATUS=$(jq -r '.service.status' deployment_status.json)
          if [ "$DEPLOY_STATUS" != "live" ]; then
            echo "Deployment failed"
            exit 1
          fi
